[{"/home/david/Documents/Data Page/frontend/src/index.js":"1","/home/david/Documents/Data Page/frontend/src/api/coinGecko.js":"2","/home/david/Documents/Data Page/frontend/src/App.js":"3","/home/david/Documents/Data Page/frontend/src/components/Navbar/index.js":"4","/home/david/Documents/Data Page/frontend/src/components/Navbar/LeftMenu.js":"5","/home/david/Documents/Data Page/frontend/src/components/Navbar/RightMenu.js":"6","/home/david/Documents/Data Page/frontend/src/components/Coins/CoinList.js":"7","/home/david/Documents/Data Page/frontend/src/components/Footer/Footer.js":"8","/home/david/Documents/Data Page/frontend/src/components/Sider/Sider.js":"9","/home/david/Documents/Data Page/frontend/src/components/Coins/actions.js":"10","/home/david/Documents/Data Page/frontend/src/reportWebVitals.js":"11","/home/david/Documents/Data Page/frontend/src/redux_reducers/index.js":"12","/home/david/Documents/Data Page/frontend/src/constants/index.js":"13"},{"size":732,"mtime":1612311464962,"results":"14","hashOfConfig":"15"},{"size":108,"mtime":1612286100819,"results":"16","hashOfConfig":"15"},{"size":514,"mtime":1612309348898,"results":"17","hashOfConfig":"15"},{"size":1047,"mtime":1612303457669,"results":"18","hashOfConfig":"15"},{"size":943,"mtime":1612302588991,"results":"19","hashOfConfig":"15"},{"size":482,"mtime":1612301271196,"results":"20","hashOfConfig":"15"},{"size":6117,"mtime":1612311749427,"results":"21","hashOfConfig":"15"},{"size":246,"mtime":1612305306964,"results":"22","hashOfConfig":"15"},{"size":2644,"mtime":1612311848783,"results":"23","hashOfConfig":"15"},{"size":2686,"mtime":1612304247569,"results":"24","hashOfConfig":"15"},{"size":362,"mtime":1612284149211,"results":"25","hashOfConfig":"15"},{"size":3920,"mtime":1612311547838,"results":"26","hashOfConfig":"15"},{"size":607,"mtime":1612311578634,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k3u39n",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/david/Documents/Data Page/frontend/src/index.js",["59"],"/home/david/Documents/Data Page/frontend/src/api/coinGecko.js",[],["60","61"],"/home/david/Documents/Data Page/frontend/src/App.js",[],"/home/david/Documents/Data Page/frontend/src/components/Navbar/index.js",[],"/home/david/Documents/Data Page/frontend/src/components/Navbar/LeftMenu.js",["62","63"],"import React from 'react';\nimport { Menu, Grid } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nconst LeftMenu = () => {\n  const { md } = useBreakpoint()\n  return (\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\n      <Menu.Item key=\"mail\">\n        <a href=\"https://inbrock.com\">Home</a>\n      </Menu.Item>\n      {/* <SubMenu key=\"sub1\" title={<span>Data</span>}>\n        <MenuItemGroup title=\"Item 1\">\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n        </MenuItemGroup>\n        <MenuItemGroup title=\"Item 2\">\n          <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n          <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n        </MenuItemGroup>\n      </SubMenu> */}\n      <Menu.Item key=\"alipay\">\n        <a href=\"/markets\">Data</a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default LeftMenu;","/home/david/Documents/Data Page/frontend/src/components/Navbar/RightMenu.js",["64","65","66","67"],"import React from 'react';\nimport { Menu, Grid } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nconst RightMenu = () => {\n  const { md } = useBreakpoint();\n  return (\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\n      <Menu.Item key=\"mail\">\n        <a href=\"\">Signin</a>\n      </Menu.Item>\n      <Menu.Item key=\"app\">\n        <a href=\"\">Signup</a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default RightMenu;","/home/david/Documents/Data Page/frontend/src/components/Coins/CoinList.js",["68","69","70","71"],"import React, { useState, useEffect, Fragment, Component } from \"react\";\nimport Sider from \"../Sider/Sider\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport Highlighter from 'react-highlight-words'\n\nimport { Layout, Table, Button, Input, Tag, Typography} from 'antd'\nimport Icon from \"@ant-design/icons\"\n\nimport coinGecko from \"../../api/coinGecko.js\"\nimport { fetchCoins, setSiderMenuItem} from \"../Coins/actions\"\n\nconst { Content } = Layout;\nconst { Title, Paragraph} = Typography;\n\n/* export const CoinList = () => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [coins, setCoins] = useState([])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoading(true);\n\n            const res = await coinGecko.get(\"/coins/markets\", {\n            params: {\n                vs_currency: \"usd\",\n                \n                }\n            });\n            console.log(res.data)\n            setCoins(res.data);\n            setIsLoading(false);\n        };\n        fetchData();\n\n    });\n\n\n\n    const renderCoins = () => {\n        if(!isLoading) {\n            return (\n                <Fragment>\n                    <div>\n                        {coins.map(coin => {\n                            return(\n                                <div>\n                                    {coin.id}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </Fragment>\n            );\n        }\n\n        return <div>Loading...</div>\n    };\n\n    return(\n        <Fragment>\n            <Sider/>\n            <Layout style={{ padding:'1rem'}}>\n                <Content>\n                    <title level={2}>Lista de Monedas</title>\n                </Content>\n            </Layout>\n        </Fragment>\n    );\n};\n\nexport default CoinList; */\n\nclass ReactCoinsList extends Component {\n\n    state = {\n        searchText: ''\n    }\n\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n            <Input\n                ref={node => {\n                this.searchInput = node;\n                }}\n                placeholder={`Search ${dataIndex}`}\n                value={selectedKeys[0]}\n                onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n                style={{ width: 188, marginBottom: 8, display: 'block' }}\n            />\n            <Button\n                type=\"primary\"\n                onClick={() => this.handleSearch(selectedKeys, confirm)}\n                icon=\"search\"\n                size=\"small\"\n                style={{ width: 90, marginRight: 8 }}\n            >\n                Search\n            </Button>\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                Reset\n            </Button>\n            </div>\n        ),\n        filterIcon: filtered => (\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n        ),\n        onFilter: (value, record) =>\n            record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n            setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text => (\n            <Highlighter\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n            searchWords={[this.state.searchText]}\n            autoEscape\n            textToHighlight={text.toString()}\n            />\n        ),\n    });\n\n    handleSearch = (selectedKeys, confirm) => {\n        confirm();\n        this.setState({ searchText: selectedKeys[0] });\n    };\n    \n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n\n    componentDidMount () {\n        this.props.fetchCoins();\n        this.props.setSiderMenuItem('coin-list');\n    }\n\n    render() {\n        const loading = this.props.data.length > 0 ? false: true;\n\n        const columns=[\n            {\n                title:'Id',\n                dataIndex:'id',\n                key:'id',\n                ...this.getColumnSearchProps('id')\n            },\n            {\n                title:'Symbol',\n                dataIndex:'symbol',\n                key:'symbol',\n                ...this.getColumnSearchProps('symbol')\n            },\n            {\n                title:'Name',\n                dataIndex:'name',\n                key:'name',\n                ...this.getColumnSearchProps('name'),\n                render: item => <Tag color=\"purple\">{item}</Tag>\n            },\n            {\n                title:'View Details',\n                dataIndex:'id',\n                key:'id',\n                render: id => (<Button type=\"primary\"><Link to={`/coins/${id}`}>View</Link></Button>)\n            }\n        ];\n        return (\n            <React.Fragment>\n                <Sider/>\n                <Layout style={{ padding: '1rem' }}>\n                    <Content >\n                        <Title level={2}>Coins List</Title>\n                        <Paragraph>This page lists cryptocurrencies available through the CoinGecko API. To view details of a given coin, click 'View' button. You can also filter by Id, Symbol or Name to drill down and find a coin.</Paragraph>\n                        <Table \n                        \n                        bordered={true}\n                        loading={loading} \n                        dataSource={this.props.data} \n                        columns={columns}/>\n                    </Content>\n                </Layout>\n            </React.Fragment>\n           \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.coins\n    }\n}\n\nconst mapActionsToProps = { fetchCoins, setSiderMenuItem\n }\n\nexport default connect(mapStateToProps, mapActionsToProps)(ReactCoinsList);","/home/david/Documents/Data Page/frontend/src/components/Footer/Footer.js",[],"/home/david/Documents/Data Page/frontend/src/components/Sider/Sider.js",["72"],"import React, { Component, Fragment } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\nimport { Layout, Menu } from \"antd\"\nimport Icon from \"@ant-design/icons\"\n\nconst { SubMenu } = Menu;\nconst { SiderLayout } = Layout;\n\nclass Sider extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <SiderLayout \n                breakpoint=\"md\"\n                collapsedWidth=\"0\"\n                width={240} \n                style={{ background: '#fff' }}>\n                    <Menu\n                    mode=\"inline\"\n                    selectedKeys={[this.props.sider_selected]}\n                    defaultOpenKeys={['menu-exchange-rates', 'menu-updates', 'menu-coins', 'menu-events', 'menu-global', 'menu-exchanges']}\n                    style={{ height: '100%', borderRight: 0 }}\n                    >\n                    {/* Status updates */}\n                    <SubMenu\n                        key=\"menu-updates\"\n                        title={\n                        <span>\n                            <Icon type=\"alert\" />Updates\n                        </span>\n                        }\n                        >\n                        <Menu.Item key=\"status-list\"><Link to='/status/list'>Updates Listing</Link></Menu.Item>\n                    </SubMenu>\n                   {/* Coin Sub Menu */}\n                    <SubMenu\n                        key=\"menu-coins\"\n                        title={\n                        <span>\n                            <Icon type=\"dollar\" />Coins\n                        </span>\n                        }\n                        >\n                        <Menu.Item key=\"coin-list\"><Link to='/coins'>Coin Listing</Link></Menu.Item>\n                        <Menu.Item key=\"coin-detail\"><Link to='/coins/bitcoin'>Coin Detail View</Link></Menu.Item>\n                    </SubMenu>\n                    \n                    {/* Events Sub Menu */}\n                    <SubMenu\n                        key=\"menu-events\"\n                        title={\n                        <span>\n                            <Icon type=\"team\" />Events\n                        </span>\n                        }\n                        >\n                        <Menu.Item key=\"events-list\"><Link to='/events/list'>Events Listing</Link></Menu.Item>\n                    </SubMenu>\n                    \n                    {/* Exchanges Menu */}\n                    <SubMenu\n                    key=\"menu-exchanges\"\n                    title={\n                        <span>\n                            <Icon type=\"bank\" />\n                            Exchanges\n                        </span>\n                        }>\n                    <Menu.Item key=\"exchanges-list\"><Link to='/exchanges/list'>Exchanges Listing</Link></Menu.Item>\n                    </SubMenu>\n\n                    {/* Exchange Rates Menu */}\n                    <SubMenu\n                    key=\"menu-exchange-rates\"\n                    title={\n                        <span>\n                            <Icon type=\"dollar\" />\n                            Exchange Rates\n                        </span>\n                        }>\n                    <Menu.Item key=\"exchange-rates-list\"><Link to='/exchange-rates'>Exchange Rates Listing</Link></Menu.Item>\n                    </SubMenu>\n\n\n                    {/* Global Sub Menu */}\n                    <SubMenu\n                        key=\"menu-global\"\n                        title={\n                        <span>\n                            <Icon type=\"global\" />\n                            Global\n                        </span>\n                        }\n                    >\n                        <Menu.Item key=\"global-main\"><Link to='/global'>Data</Link></Menu.Item>\n                    </SubMenu>\n                    </Menu>\n                </SiderLayout>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        sider_selected: state.sider_selected\n    }\n\n}\n\nexport default connect(mapStateToProps)(Sider)","/home/david/Documents/Data Page/frontend/src/components/Coins/actions.js",[],"/home/david/Documents/Data Page/frontend/src/reportWebVitals.js",[],"/home/david/Documents/Data Page/frontend/src/redux_reducers/index.js",[],"/home/david/Documents/Data Page/frontend/src/constants/index.js",[],{"ruleId":"73","severity":1,"message":"74","line":5,"column":8,"nodeType":"75","messageId":"76","endLine":5,"endColumn":23},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"81","line":3,"column":7,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"82","line":4,"column":7,"nodeType":"75","messageId":"76","endLine":4,"endColumn":20},{"ruleId":"73","severity":1,"message":"81","line":3,"column":7,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"82","line":4,"column":7,"nodeType":"75","messageId":"76","endLine":4,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":13,"column":9,"nodeType":"85","endLine":13,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":16,"column":9,"nodeType":"85","endLine":16,"endColumn":20},{"ruleId":"73","severity":1,"message":"86","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"87","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"88","line":1,"column":38,"nodeType":"75","messageId":"76","endLine":1,"endColumn":46},{"ruleId":"73","severity":1,"message":"89","line":10,"column":8,"nodeType":"75","messageId":"76","endLine":10,"endColumn":17},{"ruleId":"73","severity":1,"message":"88","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'Fragment' is defined but never used.","'coinGecko' is defined but never used.","no-global-assign","no-unsafe-negation"]