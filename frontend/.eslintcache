[{"/home/david/Documents/Data Page/frontend/src/index.js":"1","/home/david/Documents/Data Page/frontend/src/api/coinGecko.js":"2","/home/david/Documents/Data Page/frontend/src/App.js":"3","/home/david/Documents/Data Page/frontend/src/components/Navbar/index.js":"4","/home/david/Documents/Data Page/frontend/src/components/Navbar/LeftMenu.js":"5","/home/david/Documents/Data Page/frontend/src/components/Navbar/RightMenu.js":"6","/home/david/Documents/Data Page/frontend/src/components/Coins/CoinList.js":"7","/home/david/Documents/Data Page/frontend/src/components/Footer/Footer.js":"8","/home/david/Documents/Data Page/frontend/src/components/Sider/Sider.js":"9","/home/david/Documents/Data Page/frontend/src/components/Coins/actions.js":"10","/home/david/Documents/Data Page/frontend/src/reportWebVitals.js":"11","/home/david/Documents/Data Page/frontend/src/redux_reducers/index.js":"12","/home/david/Documents/Data Page/frontend/src/constants/index.js":"13","/home/david/Documents/Data Page/frontend/src/components/styles.js":"14"},{"size":732,"mtime":1612311464962,"results":"15","hashOfConfig":"16"},{"size":108,"mtime":1612286100819,"results":"17","hashOfConfig":"16"},{"size":1326,"mtime":1612318460835,"results":"18","hashOfConfig":"16"},{"size":1047,"mtime":1612303457669,"results":"19","hashOfConfig":"16"},{"size":944,"mtime":1612318398583,"results":"20","hashOfConfig":"16"},{"size":482,"mtime":1612301271196,"results":"21","hashOfConfig":"16"},{"size":4556,"mtime":1612315914089,"results":"22","hashOfConfig":"16"},{"size":301,"mtime":1612314278578,"results":"23","hashOfConfig":"16"},{"size":2361,"mtime":1612318244395,"results":"24","hashOfConfig":"16"},{"size":2686,"mtime":1612304247569,"results":"25","hashOfConfig":"16"},{"size":362,"mtime":1612284149211,"results":"26","hashOfConfig":"16"},{"size":3920,"mtime":1612311547838,"results":"27","hashOfConfig":"16"},{"size":607,"mtime":1612311578634,"results":"28","hashOfConfig":"16"},{"size":527,"mtime":1612318526863,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"1k3u39n",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/david/Documents/Data Page/frontend/src/index.js",["62"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { rootReducer} from './redux_reducers';\nimport thunk from 'redux-thunk'\n\nimport 'antd/dist/antd.css'\nimport { HashRouter } from 'react-router-dom'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n      <HashRouter>\n          <App/>\n      </HashRouter>\n  </Provider>, \n  document.getElementById('root'))",["63","64"],"/home/david/Documents/Data Page/frontend/src/api/coinGecko.js",[],"/home/david/Documents/Data Page/frontend/src/App.js",[],"/home/david/Documents/Data Page/frontend/src/components/Navbar/index.js",[],"/home/david/Documents/Data Page/frontend/src/components/Navbar/LeftMenu.js",["65","66"],"/home/david/Documents/Data Page/frontend/src/components/Navbar/RightMenu.js",["67","68","69","70"],"import React from 'react';\nimport { Menu, Grid } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nconst { useBreakpoint } = Grid;\n\nconst RightMenu = () => {\n  const { md } = useBreakpoint();\n  return (\n    <Menu mode={md ? \"horizontal\" : \"inline\"}>\n      <Menu.Item key=\"mail\">\n        <a href=\"\">Signin</a>\n      </Menu.Item>\n      <Menu.Item key=\"app\">\n        <a href=\"\">Signup</a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default RightMenu;","/home/david/Documents/Data Page/frontend/src/components/Coins/CoinList.js",["71","72"],"import React, { useState, useEffect, Fragment, Component } from \"react\";\nimport ReactSider from \"../Sider/Sider\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport Highlighter from 'react-highlight-words'\nimport { contentStyle, tableStyle} from \"../styles\"\n\nimport { Layout, Table, Button, Input, Tag, Typography} from 'antd'\nimport Icon from \"@ant-design/icons\"\n\nimport { fetchCoins, setSiderMenuItem} from \"../Coins/actions\"\n\nconst { Content } = Layout;\nconst { Title} = Typography;\n\nclass CoinList extends Component {\n\n    state = {\n        searchText: ''\n    }\n\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n            <Input\n                ref={node => {\n                this.searchInput = node;\n                }}\n                placeholder={`Search ${dataIndex}`}\n                value={selectedKeys[0]}\n                onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n                style={{ width: 188, marginBottom: 8, display: 'block' }}\n            />\n            <Button\n                type=\"primary\"\n                onClick={() => this.handleSearch(selectedKeys, confirm)}\n                icon=\"search\"\n                size=\"small\"\n                style={{ width: 90, marginRight: 8 }}\n            >\n                Search\n            </Button>\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                Reset\n            </Button>\n            </div>\n        ),\n        filterIcon: filtered => (\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n        ),\n        onFilter: (value, record) =>\n            record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase()),\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n            setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text => (\n            <Highlighter\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n            searchWords={[this.state.searchText]}\n            autoEscape\n            textToHighlight={text.toString()}\n            />\n        ),\n    });\n\n    handleSearch = (selectedKeys, confirm) => {\n        confirm();\n        this.setState({ searchText: selectedKeys[0] });\n    };\n    \n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n\n    componentDidMount () {\n        this.props.fetchCoins();\n        this.props.setSiderMenuItem('coin-list');\n    }\n\n    render() {\n        const loading = this.props.data.length > 0 ? false: true;\n\n        const columns=[\n            {\n                title:'Id',\n                dataIndex:'id',\n                key:'id',\n                ...this.getColumnSearchProps('id')\n            },\n            {\n                title:'Symbol',\n                dataIndex:'symbol',\n                key:'symbol',\n                ...this.getColumnSearchProps('symbol')\n            },\n            {\n                title:'Name',\n                dataIndex:'name',\n                key:'name',\n                ...this.getColumnSearchProps('name'),\n                render: item => <Tag color=\"purple\">{item}</Tag>\n            },\n            {\n                title:'View Details',\n                dataIndex:'id',\n                key:'id',\n                render: id => (<Button type=\"primary\"><Link to={`/coins/${id}`}>View</Link></Button>)\n            }\n        ];\n        return (\n            <Fragment>\n                <ReactSider/>\n                <Layout style={{ padding: '1rem' }}>\n                    <Content style={contentStyle}>\n                        <Title level={2}>Ranking Criptomonedas</Title>\n                        <Table \n                        style={tableStyle}\n                        bordered={true}\n                        loading={loading} \n                        dataSource={this.props.data} \n                        columns={columns}/>\n                    </Content>\n                </Layout>\n            </Fragment>\n           \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.coins\n    }\n}\n\nconst mapActionsToProps = { fetchCoins, setSiderMenuItem\n }\n\nexport default connect(mapStateToProps, mapActionsToProps)(CoinList);","/home/david/Documents/Data Page/frontend/src/components/Footer/Footer.js",[],"/home/david/Documents/Data Page/frontend/src/components/Sider/Sider.js",[],"/home/david/Documents/Data Page/frontend/src/components/Coins/actions.js",[],"/home/david/Documents/Data Page/frontend/src/reportWebVitals.js",[],"/home/david/Documents/Data Page/frontend/src/redux_reducers/index.js",[],"/home/david/Documents/Data Page/frontend/src/constants/index.js",[],"/home/david/Documents/Data Page/frontend/src/components/styles.js",["73"],{"ruleId":"74","severity":1,"message":"75","line":5,"column":8,"nodeType":"76","messageId":"77","endLine":5,"endColumn":23},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":3,"column":7,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"83","line":4,"column":7,"nodeType":"76","messageId":"77","endLine":4,"endColumn":20},{"ruleId":"74","severity":1,"message":"82","line":3,"column":7,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"83","line":4,"column":7,"nodeType":"76","messageId":"77","endLine":4,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":13,"column":9,"nodeType":"86","endLine":13,"endColumn":20},{"ruleId":"84","severity":1,"message":"85","line":16,"column":9,"nodeType":"86","endLine":16,"endColumn":20},{"ruleId":"74","severity":1,"message":"87","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"88","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"89","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":22},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'AutoComplete' is defined but never used.","no-global-assign","no-unsafe-negation"]